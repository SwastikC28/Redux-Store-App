{"version":3,"sources":["components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-action.js","store/index.js","index.js","components/Cart/CartItem.module.css"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","console","log","payload","addItemtoCart","existingItem","find","item","id","quantity","totalPrice","price","title","push","removeItemfromCart","itemId","filter","cartActions","actions","CartItem","total","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","cartData","useSelector","cart","map","uiSlice","isVisible","notification","toggleCart","showNotification","status","message","uiActions","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","Products","useState","products","setProducts","useEffect","getData","fetch","response","json","data","transformedData","prod","splice","product","Notification","specialClasses","error","success","cssClasses","App","ui","fetchData","ok","Error","sendData","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.82a71615.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__1nDMq\",\"price\":\"ProductItem_price__KloBx\",\"actions\":\"ProductItem_actions__26rKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1Hh7U\",\"error\":\"Notification_error__1ILjX\",\"success\":\"Notification_success__NQTpF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__1ReEg\",\"badge\":\"CartButton_badge__M0t-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3TrsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__IhFms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__1Ri6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__38rY7\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  totalQuantity: 0,\r\n  changed: false,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      console.log(action);\r\n      state.items = action.payload.items || [];\r\n      state.totalQuantity = action.payload.totalQuantity || 0;\r\n    },\r\n    addItemtoCart(state, action) {\r\n      state.changed = true;\r\n      let existingItem = state.items.find(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      state.totalQuantity++;\r\n\r\n      if (existingItem) {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice += existingItem.price;\r\n      } else {\r\n        const { title, price, id } = action.payload;\r\n        const item = {\r\n          title,\r\n          price,\r\n          id,\r\n          quantity: 1,\r\n          totalPrice: price,\r\n        };\r\n        state.items.push(item);\r\n      }\r\n    },\r\n\r\n    removeItemfromCart(state, action) {\r\n      state.changed = true;\r\n      const itemId = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === itemId);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== itemId);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice -= existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const { title, quantity, total, price, id } = props.item;\n  const dispatch = useDispatch();\n\n  const addItemToCart = () => {\n    dispatch(\n      cartActions.addItemtoCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  const itemRemoveHandler = () => {\n    dispatch(cartActions.removeItemfromCart(id));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={itemRemoveHandler}>-</button>\n          <button onClick={addItemToCart}> +</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n\nconst Cart = (props) => {\n  const cartData = useSelector((state) => state.cart.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartData.map((cart) => (\n          <CartItem\n            key={cart.id}\n            item={{\n              title: cart.title,\n              quantity: cart.quantity,\n              total: cart.totalPrice,\n              price: cart.price,\n              id: cart.id,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  isVisible: false,\r\n  notification: null,\r\n};\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState,\r\n  reducers: {\r\n    toggleCart(state, action) {\r\n      state.isVisible = !state.isVisible;\r\n    },\r\n\r\n    showNotification(state, action) {\r\n      const { title, status, message } = action.payload;\r\n      state.notification = { title, status, message };\r\n    },\r\n  },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\nexport default uiSlice;\r\n","import { useDispatch, useSelector } from 'react-redux';\nimport { uiActions } from '../../store/ui-slice';\nimport classes from './CartButton.module.css';\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n  const cartQuantity = useSelector((state) => state.cart.totalQuantity);\n  const toggleCart = () => {\n    dispatch(uiActions.toggleCart());\n  };\n\n  return (\n    <button className={classes.button} onClick={toggleCart}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  const { title, price, description, id } = props;\n\n  const dispatch = useDispatch();\n  const addItemToCart = () => {\n    dispatch(\n      cartActions.addItemtoCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addItemToCart}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import { useEffect, useState } from 'react';\nimport ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst Products = (props) => {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      // Get Products\n      const response = await fetch('https://dummyjson.com/products');\n      let data = await response.json();\n      data = data.products;\n\n      let transformedData = data.map((prod) => {\n        const object = {\n          id: prod.id,\n          title: prod.title,\n          price: prod.price,\n          description: prod.description,\n        };\n        return object;\n      });\n\n      transformedData = transformedData.splice(0, 9);\n      setProducts(transformedData);\n    };\n\n    getData();\n  }, []);\n\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {products.map((product) => (\n          <ProductItem\n            id={product.id}\n            key={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = '';\r\n\r\n  if (props.status === 'error') {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === 'success') {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { getData, sendCartData } from './store/cart-action';\nimport Notification from './components/UI/Notification';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const isVisible = useSelector((state) => state.ui.isVisible);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(getData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          title={notification.title}\n          status={notification.status}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {isVisible && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { cartActions } from './cart-slice';\r\nimport { uiActions } from './ui-slice';\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    const sendData = async () => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'pending',\r\n          title: 'Sending....',\r\n          message: 'Sending Cart Data',\r\n        })\r\n      );\r\n\r\n      const response = await fetch(\r\n        'https://react-redux-5fe9f-default-rtdb.firebaseio.com/cart.json',\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify({\r\n            items: cart.items,\r\n            totalQuantity: cart.totalQuantity,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Sending Cart Data Failed!');\r\n      }\r\n    };\r\n\r\n    try {\r\n      await sendData();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'success',\r\n          title: 'Success!',\r\n          message: 'Cart Data Saved Successfully',\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'failed',\r\n          title: 'Error!',\r\n          message: 'Sending Cart Data Failed',\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const getData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        'https://react-redux-5fe9f-default-rtdb.firebaseio.com/cart.json'\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Cound not Fetch Cart Data.');\r\n      }\r\n      const data = await response.json();\r\n      if (data == null) {\r\n        return { items: [], totalQuantity: 0 };\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const cartData = await fetchData();\r\n      dispatch(cartActions.replaceCart(cartData));\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Sending Cart Data Failed',\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport cartSlice from './cart-slice';\r\nimport uiSlice from './ui-slice';\r\n\r\nconst store = configureStore({\r\n  reducer: { cart: cartSlice.reducer, ui: uiSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__2cMro\",\"details\":\"CartItem_details__2IXWR\",\"quantity\":\"CartItem_quantity__1gV2s\",\"price\":\"CartItem_price__3KJJQ\",\"itemprice\":\"CartItem_itemprice__3Slox\",\"actions\":\"CartItem_actions__3IsqC\"};"],"sourceRoot":""}